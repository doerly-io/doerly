name: doerly

services:
  
  main.service:
    container_name: doerly-main-service
    build:
      context: ./src/main-service
      dockerfile: ./Doerly.Host/Dockerfile
    restart: always
    ports:
      - 5000:8080
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - db
      - azurite
      - redis
    #volumes:
      #- ./src/main-service/Doerly.WebHost/appsettings.${ASPNETCORE_ENVIRONMENT}.json:/app/appsettings.json  
      
  rating.job:
    container_name: doerly-rating-job
    build:
      context: ./src/main-service
      dockerfile: ./Jobs/Doerly.Module.Profile.RatingJob/Dockerfile
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - db
      - main.service

  db:
    image: postgres:14.15-alpine
    container_name: doerly-db
    restart: always
    ports:
    - 5432:5432
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - doerly-db-data:/var/lib/postgresql/data
  
  db.admin:
    image: dpage/pgadmin4:7
    container_name: admin-doerly-db
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - doerly-db-admin-data:/var/lib/pgadmin

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000"  # Blob
      - "10001:10001"  # Queue
      - "10002:10002"  # Table
    volumes:
      - doerly-azurite-data:/data
    command: "azurite --location /data --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"

  redis:
    image: redis:8.0.2-alpine
    container_name: doerly-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - doerly-redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  prometheus:
    image: prom/prometheus:latest
    container_name: doerly-prometheus
    volumes:
      - ./.deploy/prometheus.yml:/etc/prometheus/prometheus.yml
      - doerly-prometheus-data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: doerly-grafana
    ports:
      - "25665:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin  
      - GF_INSTALL_PLUGINS=flant-statusmap-panel,grafana-piechart-panel
    volumes:
      - doerly-grafana-data:/var/lib/grafana
      - ./.deploy/datasources.yml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - ./.deploy/dashboards:/etc/grafana/provisioning/dashboards
    restart: always
    depends_on:
      - prometheus

volumes:
  doerly-db-data:
  doerly-db-admin-data:
  doerly-azurite-data:
  doerly-redis-data:
  doerly-grafana-data:
  doerly-prometheus-data:
