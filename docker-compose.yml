name: doerly

services:
  main.service:
    container_name: doerly-main-service
    build:
      context: ./src/main-service/
      dockerfile: ./Doerly.Host/Dockerfile
    restart: always
    ports:
      - 5000:8080
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - db
      - azurite
      - redis
    #volumes:
      #- ./src/main-service/Doerly.WebHost/appsettings.${ASPNETCORE_ENVIRONMENT}.json:/app/appsettings.json   

  db:
    image: postgres:14.15-alpine
    container_name: doerly-db
    restart: always
    ports:
    - 5432:5432
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - doerly-db-data:/var/lib/postgresql/data
  
  db.admin:
    image: dpage/pgadmin4:7
    container_name: admin-doerly-db
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - doerly-db-admin-data:/var/lib/pgadmin

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000"  # Blob
      - "10001:10001"  # Queue
      - "10002:10002"  # Table
    volumes:
      - doerly-azurite-data:/data
    command: "azurite --location /data --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"

  redis:
    image: redis
    container_name: doerly-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - doerly-redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  doerly-db-data:
  doerly-db-admin-data:
  doerly-azurite-data:
  doerly-redis-data: