// <auto-generated />
using System;
using Doerly.Module.Order.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Doerly.Module.Order.DataAccess.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20250608113543_RenamedServiceToCategory")]
    partial class RenamedServiceToCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.ExecutionProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer")
                        .HasColumnName("receiver_id");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer")
                        .HasColumnName("sender_id");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_execution_proposal");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_execution_proposal_order_id");

                    b.HasIndex("ReceiverId")
                        .HasDatabaseName("ix_execution_proposal_receiver_id");

                    b.HasIndex("SenderId")
                        .HasDatabaseName("ix_execution_proposal_sender_id");

                    b.ToTable("execution_proposal", "order");
                });

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BillId")
                        .HasColumnType("integer")
                        .HasColumnName("bill_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<Guid>("Code")
                        .HasMaxLength(36)
                        .HasColumnType("uuid")
                        .HasColumnName("code");

                    b.Property<bool>("CustomerCompletionConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("customer_completion_confirmed");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnName("description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("due_date");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("execution_date");

                    b.Property<bool>("ExecutorCompletionConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("executor_completion_confirmed");

                    b.Property<int?>("ExecutorId")
                        .HasColumnType("integer")
                        .HasColumnName("executor_id");

                    b.Property<bool>("IsPriceNegotiable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_price_negotiable");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<byte>("PaymentKind")
                        .HasColumnType("smallint")
                        .HasColumnName("payment_kind");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("price");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("region_id");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_order");

                    b.ToTable("order", "order");
                });

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.OrderFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("path");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_order_file");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_file_order_id");

                    b.ToTable("order_file", "order");
                });

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.ExecutionProposal", b =>
                {
                    b.HasOne("Doerly.Module.Order.DataAccess.Entities.Order", "Order")
                        .WithMany("ExecutionProposals")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_execution_proposal_orders_order_id");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.OrderFile", b =>
                {
                    b.HasOne("Doerly.Module.Order.DataAccess.Entities.Order", "Order")
                        .WithMany("OrderFiles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_file_order_order_id");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Doerly.Module.Order.DataAccess.Entities.Order", b =>
                {
                    b.Navigation("ExecutionProposals");

                    b.Navigation("OrderFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
