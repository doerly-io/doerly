// <auto-generated />
using System;
using Doerly.Module.Catalog.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Doerly.Module.Catalog.DataAccess.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250603215248_AddedEnumOfFilterType")]
    partial class AddedEnumOfFilterType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_category_is_deleted");

                    b.HasIndex("IsEnabled")
                        .HasDatabaseName("ix_category_is_enabled");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_category_name");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_category_parent_id");

                    b.ToTable("category", "catalog");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_filter");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_filter_category_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_filter_name");

                    b.ToTable("filter", "catalog");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_service");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_service_category_id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_service_is_deleted");

                    b.HasIndex("IsEnabled")
                        .HasDatabaseName("ix_service_is_enabled");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_service_name");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_service_user_id");

                    b.ToTable("service", "catalog");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.ServiceFilterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<int>("FilterId")
                        .HasColumnType("integer")
                        .HasColumnName("filter_id");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("service_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_service_filter_value");

                    b.HasIndex("ServiceId")
                        .HasDatabaseName("ix_service_filter_value_service_id");

                    b.HasIndex("FilterId", "Value")
                        .HasDatabaseName("ix_service_filter_value_filter_id_value");

                    b.ToTable("service_filter_value", "catalog");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Category", b =>
                {
                    b.HasOne("Doerly.Module.Catalog.DataAccess.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_category_category_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Filter", b =>
                {
                    b.HasOne("Doerly.Module.Catalog.DataAccess.Models.Category", "Category")
                        .WithMany("Filters")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_filter_category_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Service", b =>
                {
                    b.HasOne("Doerly.Module.Catalog.DataAccess.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_service_category_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.ServiceFilterValue", b =>
                {
                    b.HasOne("Doerly.Module.Catalog.DataAccess.Models.Filter", "Filter")
                        .WithMany("FilterValues")
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_service_filter_value_filter_filter_id");

                    b.HasOne("Doerly.Module.Catalog.DataAccess.Models.Service", "Service")
                        .WithMany("FilterValues")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_service_filter_value_service_service_id");

                    b.Navigation("Filter");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Filters");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Filter", b =>
                {
                    b.Navigation("FilterValues");
                });

            modelBuilder.Entity("Doerly.Module.Catalog.DataAccess.Models.Service", b =>
                {
                    b.Navigation("FilterValues");
                });
#pragma warning restore 612, 618
        }
    }
}
