<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid password</value>
  </data>
  <data name="UserAlreadyExist" xml:space="preserve">
    <value>User with this username already exists</value>
  </data>
  <data name="InvalidPasswordInput" xml:space="preserve">
    <value>Incorrect password format</value>
  </data>
  <data name="InvalidEmailFormatInput" xml:space="preserve">
    <value>Invalid email format</value>
  </data>
  <data name="ValidTokenNotFound" xml:space="preserve">
    <value>Valid token not found</value>
  </data>
  <data name="ResetPasswordEmailVerificationText" xml:space="preserve">
    <value>Hello,

We received a request to reset your password. If you did not make this request, please ignore this message.

To reset your password, please click the link below:</value>
  </data>
  <data name="ResetPasswordEmailBestRegardsText" xml:space="preserve">
    <value>If you have any questions, please contact our support team.

Best regards, &lt;/br&gt;
Doerly</value>
  </data>
  <data name="ResetPasswordEmailSubject" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="InvalidFirstNameInput" xml:space="preserve">
    <value>Invalid first name format</value>
  </data>
  <data name="InvalidLastNameInput" xml:space="preserve">
    <value>Invalid last name format</value>
  </data>
  <data name="InvalidPatronymicInput" xml:space="preserve">
    <value>Invalid patronymic format</value>
  </data>
  <data name="InvalidDateOfBirthInput" xml:space="preserve">
    <value>Invalid date of birth format</value>
  </data>
  <data name="InvalidSexInput" xml:space="preserve">
    <value>Invalid sex format</value>
  </data>
  <data name="InvalidBioInput" xml:space="preserve">
    <value>Invalid bio format</value>
  </data>
  <data name="ProfileNotFound" xml:space="preserve">
    <value>Profile not found</value>
  </data>
  <data name="FirstNameTooLong" xml:space="preserve">
    <value>First name too long</value>
  </data>
  <data name="FirstNameTooShort" xml:space="preserve">
    <value>First name too short</value>
  </data>
  <data name="LastNameTooLong" xml:space="preserve">
    <value>Last name too long</value>
  </data>
  <data name="LastNameTooShort" xml:space="preserve">
    <value>Last name too short</value>
  </data>
  <data name="BioTooLong" xml:space="preserve">
    <value>Bio too long</value>
  </data>
  <data name="EmailVerificationText" xml:space="preserve">
    <value>Thank you for signing up with DOERLY! To complete your registration, please verify your email address by clicking the link below:</value>
  </data>
  <data name="ORDER_NOT_FOUND" xml:space="preserve">
    <value>Order not found</value>
  </data>
  <data name="EXECUTION_PROPOSAL_NOT_FOUND" xml:space="preserve">
    <value>Execution proposal not found</value>
  </data>
  <data name="EXECUTION_PROPOSAL_ALREADY_SENT" xml:space="preserve">
    <value>Execution proposal to this user has already been sent</value>
  </data>
  <data name="CategoryNotFound" xml:space="preserve">
    <value>Category not found</value>
  </data>
  <data name="ServiceNotFound" xml:space="preserve">
    <value>Service not found</value>
  </data>
  <data name="ServiceAlreadyDeleted" xml:space="preserve">
    <value>Service already deleted</value>
  </data>
  <data name="CategoryAlreadyDeleted" xml:space="preserve">
    <value>Category already deleted</value>
  </data>
  <data name="CategoryCannotBeOwnParent" xml:space="preserve">
    <value>Ð¡ategory cannot be own parent</value>
  </data>
  <data name="ParentCategoryNotFound" xml:space="preserve">
    <value>Parent category not found</value>
  </data>
</root>